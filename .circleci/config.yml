# Ruby CircleCI 2.0 configuration file
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
       - image: circleci/ruby:2.5.1-node-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
       - image: circleci/postgres:9.6
         environment:
           POSTGRES_USER: postgres

    working_directory: ~/repo

    steps:
      - checkout
      - setup_remote_docker

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: make sure yarn is up to date
          command: |
            yarn install

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run:
          name: copy sample database
          command: |
            cp config/database.yml.sample config/database.yml
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # run tests!
      # if test = pass -> run Docker stuff
      # if test = failed -> dont run Docker stuff
      - run:
          name: run tests
          command: |
            bundle exec rspec spec

      # Docker stuff
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i $HOME/caches/app.tar | true

      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .

      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p $HOME/caches
            docker save -o $HOME/caches/app.tar app

      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar

      # Configure Docker hub login credentials
      - deploy:
          name: Push application Docker image
          command: |
            docker login -u $DOCKER_HUB_USER_ID -p $DOCKER_HUB_PWD
            docker tag app $DOCKER_HUB_USER_ID/$DOCKER_HUB_REPO:$CIRCLE_SHA1
            docker tag app $DOCKER_HUB_USER_ID/$DOCKER_HUB_REPO:latest
            docker push $DOCKER_HUB_USER_ID/$DOCKER_HUB_REPO:$CIRCLE_SHA1
            docker push $DOCKER_HUB_USER_ID/$DOCKER_HUB_REPO:latest

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
